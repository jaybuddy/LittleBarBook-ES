
swagger: '2.0'

info:
  description: The backend API that handles database interaction for littlebarbook.com
  version: '1.0'
  title: Little Bar Booke API

basePath: /api/v1

consumes:
  - application/x-www-form-urlencoded

produces:
  - application/json

tags:
  - name: Drinks
  - name: Ingredients
  - name: Users

securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
  /drinks:
    get:
      tags:
        - Drinks
      summary: Retrieves a list of the logged in users drinks
      security:
        - bearer: []
      responses:
        200:
          description: Successfully added user
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
  
  /drink: 
    post:
      tags:
        - Drinks
      summary: Creates a new drink 
      security:
        - bearer: []
      parameters:
        - name: name
          in: formData
          description: The username of the drink.
          required: true
          type: string
        - name: description
          in: formData
          description: A description of the drink.
          required: true
          type: string
      responses:
        200:
          description: Successfully added drink
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null 
    get:
      tags:
        - Drinks
      summary: Retrieves a list of the logged in users drinks
      security:
        - bearer: []
      parameters:
        - name: id
          in: query
          description: The Id if the drink.
          required: true
          type: string
      responses:
        200:
          description: Successfully added user
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null 
    patch:
      tags:
        - Drinks
      summary: Updates a new drink 
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the drink.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the drink.
          required: true
          type: string
        - name: description
          in: formData
          description: A description of the drink.
          type: string
      responses:
        200:
          description: Successfully added drink
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
    delete:
      tags:
        - Drinks
      summary: Deletes a drink from a users bar book
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the drink to delete.
          required: true
          type: string
      responses:
        200:
          description: Successfully deleted drink
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
  
  /ingredient: 
    post:
      tags:
        - Ingredients
      summary: Creates a new drink ingredient
      security:
        - bearer: []
      parameters:
        - name: name
          in: formData
          description: The name of the ingredient.
          required: true
          type: string
        - name: drinkId
          in: formData
          description: The id of the drink this ingredient belongs to.
          required: true
          type: string
        - name: notes
          in: formData
          description: A description of the ingredient.
          required: true
          type: string
      responses:
        200:
          description: Successfully added drink
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null 
    get:
      tags:
        - Ingredients
      summary: Retrieves a specific ingredient
      security:
        - bearer: []
      parameters:
        - name: id
          in: query
          description: The Id if the ingredient.
          required: true
          type: string
      responses:
        200:
          description: Successfully added user
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null 
    patch:
      tags:
        - Ingredients
      summary: Updates an ingredient 
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id of the ingredient to be updated.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the ingredient.
          required: true
          type: string
        - name: notes
          in: formData
          description: A description of the ingredient.
          type: string
      responses:
        200:
          description: Successfully added ingredient
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
    delete:
      tags:
        - Ingredients
      summary: Deletes an ingredient from a drink
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the ingredient to delete.
          required: true
          type: string
      responses:
        200:
          description: Successfully deleted ingredient
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
  
  /user:
    post:
      tags:
        - Users
      summary: Creates a new user 
      security:
        - bearer: []
      parameters:
        - name: name
          in: formData
          description: The username for the user.
          required: true
          type: string
        - name: password
          in: formData
          description: The desired password for the user
          required: true
          type: string
        - name: email
          in: formData
          description: Email address to associate with the user
          required: true
          type: string
      responses:
        200:
          description: Successfully added user
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
    get:
      tags:
        - Users
      summary: Retrieves the logged in users info 
      security:
        - bearer: []
      responses:
        200:
          description: Successfully added user
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
    patch:
      tags:
        - Users
      summary: Updates the logged in user (Not yet finished, need fields)
      security:
        - bearer: []
      responses:
        200:
          description: Successfully added drink
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
  
  /login:
    post:
      tags:
        - Users
      summary: Logs in a user
      security:
        - bearer: []
      parameters:
        - name: name
          in: formData
          description: The username for the user.
          required: true
          type: string
        - name: password
          in: formData
          description: The desired password for the user
          required: true
          type: string
      responses:
        200:
          description: Successfully logged in a user
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        401:
          description: Authentication error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
  
  /logout:
    get:
      tags:
        - Users
      summary: Logs out a user
      security:
        - bearer: []
      responses:
        200:
          description: Successfully logged out a user
          schema:
            type: object
            properties:
              status:
                type: string
              error:
                type: null
              data:
                type: object
        401:
          description: Authentication error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
        500:
          description: Server error
          schema:
            properties:
              status:
                type: string
              error:
                type: object
              data:
                type: null
