
swagger: '2.0'

info:
  description: The backend API that handles database interaction for littlebarbook.com
  version: '1.0'
  title: Little Bar Book (ES) API

basePath: /api/v1

consumes:
  - application/x-www-form-urlencoded

produces:
  - application/json

tags:
  - name: Drinks
  - name: Tags
  - name: Ingredients
  - name: Users

securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
  /drinks:
    get:
      tags:
        - Drinks
      summary: Retrieves a list of the logged in users drinks
      security:
        - bearer: []
      responses:
        200:
          description: Successfully added user
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema: 
            $ref: "#/definitions/ServerErrorSchema"
  
  /drink: 
    post:
      tags:
        - Drinks
      summary: Creates a new drink 
      security:
        - bearer: []
      parameters:
        - name: name
          in: formData
          description: The username of the drink.
          required: true
          type: string
        - name: description
          in: formData
          description: A description of the drink.
          required: true
          type: string
      responses:
        200:
          description: Successfully added drink
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    get:
      tags:
        - Drinks
      summary: Retrieves a list of the logged in users drinks
      security:
        - bearer: []
      parameters:
        - name: id
          in: query
          description: The Id if the drink.
          required: true
          type: string
      responses:
        200:
          description: Successfully added user
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    patch:
      tags:
        - Drinks
      summary: Updates a new drink 
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the drink.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the drink.
          required: true
          type: string
        - name: description
          in: formData
          description: A description of the drink.
          type: string
      responses:
        200:
          description: Successfully added drink
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    delete:
      tags:
        - Drinks
      summary: Deletes a drink from a users bar book
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the drink to delete.
          required: true
          type: string
      responses:
        200:
          description: Successfully deleted drink
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
  
  /tags: 
    get:
      tags:
        - Tags
      summary: Retrieves a list of the tags for a given drink
      security:
        - bearer: []
      parameters:
        - name: drinkId
          in: query
          description: The Id of the drink.
          required: true
          type: string
      responses:
        200:
          description: Successfully fetch ingredients
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    
            $ref: "#/definitions/SuccessSchema"
    delete:
      tags:
        - Tags
      summary: Deletes all tags from a drink
      security:
        - bearer: []
      parameters:
        - name: drinkId
          in: formData
          description: The Id if the drink whose tags we are to delete.
          required: true
          type: string
      responses:
        200:
          description: Successfully deleted tags
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"

  /tag: 
    post:
      tags:
        - Tags
      summary: Creates a new tag
      security:
        - bearer: []
      parameters:
        - name: name
          in: formData
          description: The name of the tag.
          required: true
          type: string
        - name: drinkId
          in: formData
          description: A ID of the drink
          required: true
          type: string
      responses:
        200:
          description: Successfully added tag
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    get:
      tags:
        - Tags
      summary: Retrieves a single tag
      security:
        - bearer: []
      parameters:
        - name: id
          in: query
          description: The Id if the tag.
          required: true
          type: string
      responses:
        200:
          description: Successfully retreived tag
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    patch:
      tags:
        - Tags
      summary: Updates a tag
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the tag.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the tag.
          required: true
          type: string
      responses:
        200:
          description: Successfully updated tag
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    delete:
      tags:
        - Tags
      summary: Deletes a tag
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the tag to delete.
          required: true
          type: string
      responses:
        200:
          description: Successfully deleted tag
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
  
  /ingredients:
    get:
      tags:
        - Ingredients
      summary: Retrieves a list of the ingredients for a drink
      security:
        - bearer: []
      parameters:
        - name: id
          in: query
          description: The Id if the drink.
          required: true
          type: string
      responses:
        200:
          description: Successfully retrieved ingredients
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema: 
            $ref: "#/definitions/ServerErrorSchema"
    delete:
      tags:
        - Ingredients
      summary: Deletes all ingredient from a drink
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the drink whose ingredients we are to delete.
          required: true
          type: string
      responses:
        200:
          description: Successfully deleted ingredients
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"

  /ingredient: 
    post:
      tags:
        - Ingredients
      summary: Creates a new drink ingredient
      security:
        - bearer: []
      parameters:
        - name: name
          in: formData
          description: The name of the ingredient.
          required: true
          type: string
        - name: drinkId
          in: formData
          description: The id of the drink this ingredient belongs to.
          required: true
          type: string
        - name: notes
          in: formData
          description: A description of the ingredient.
          required: true
          type: string
      responses:
        200:
          description: Successfully added drink
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    get:
      tags:
        - Ingredients
      summary: Retrieves a specific ingredient
      security:
        - bearer: []
      parameters:
        - name: id
          in: query
          description: The Id if the ingredient.
          required: true
          type: string
      responses:
        200:
          description: Successfully added user
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    patch:
      tags:
        - Ingredients
      summary: Updates an ingredient 
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id of the ingredient to be updated.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the ingredient.
          required: true
          type: string
        - name: notes
          in: formData
          description: A description of the ingredient.
          type: string
      responses:
        200:
          description: Successfully added ingredient
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    delete:
      tags:
        - Ingredients
      summary: Deletes an ingredient from a drink
      security:
        - bearer: []
      parameters:
        - name: id
          in: formData
          description: The Id if the ingredient to delete.
          required: true
          type: string
      responses:
        200:
          description: Successfully deleted ingredient
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
  
  /user:
    post:
      tags:
        - Users
      summary: Creates a new user 
      security:
        - bearer: []
      parameters:
        - name: displayName
          in: formData
          description: The display for the user.
          required: true
          type: string
        - name: password
          in: formData
          description: The desired password for the user
          required: true
          type: string
        - name: email
          in: formData
          description: Email address to associate with the user
          required: true
          type: string
      responses:
        200:
          description: Successfully added user
          schema:
            $ref: "#/definitions/SuccessSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    get:
      tags:
        - Users
      summary: Retrieves the logged in users info 
      security:
        - bearer: []
      responses:
        200:
          description: Successfully added user
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
    patch:
      tags:
        - Users
      summary: Updates the logged in user (Not yet finished, need fields)
      security:
        - bearer: []
      responses:
        200:
          description: Successfully added drink
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"

  /login:
    post:
      tags:
        - Users
      summary: Logs in a user
      security:
        - bearer: []
      parameters:
        - name: email
          in: formData
          description: The email address for the user.
          required: true
          type: string
        - name: password
          in: formData
          description: The desired password for the user
          required: true
          type: string
      responses:
        200:
          description: Successfully logged in a user
          schema:
            $ref: "#/definitions/SuccessSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"
  
  /logout:
    get: 
      tags:
        - Users
      summary: Logs out a user
      security:
        - bearer: []
      responses:
        200:
          description: Successfully logged out user
          schema:
            $ref: "#/definitions/SuccessSchema"
        401:
          description: Authentication error
          schema:
            $ref: "#/definitions/AuthErrorSchema"
        500:
          description: Server error
          schema:
            $ref: "#/definitions/ServerErrorSchema"

definitions:
  SuccessSchema:
    type: object
    properties:
      status:
        type: string
      error:
        type: null
      data:
        type: object
  ServerErrorSchema:
    type: object
    properties:
      status:
        type: string
      error:
        type: object
      data:
        type: null
  AuthErrorSchema:
    type: object
    properties:
      status:
        type: string
      error:
        type: object
      data:
        type: null